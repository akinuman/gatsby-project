/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: SketchSupreme (https://sketchfab.com/ispeakzhongwen22)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/mandalorian-the-fortnite-season-6-skin-updated-92cc2754e8d649b4846047175f234566
title: Mandalorian | The Fortnite Season 6 Skin UPDATED
*/

import { useGLTF } from "@react-three/drei";
import { useLoader } from "@react-three/fiber";
import React, { useRef, useMemo } from "react";
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";

export default function Model({count = 2000}) {
  const positions = useMemo(() => {
    let positions = []
    for (let i = 0; i < count; i++) {
      const r = 4000
      const theta = 2 * Math.PI * Math.random()
      const phi = Math.acos(2 * Math.random() - 1)
      const x = r * Math.cos(theta) * Math.sin(phi) + (-2000 + Math.random() * 4000)
      const y = r * Math.sin(theta) * Math.sin(phi) + (-2000 + Math.random() * 4000)
      const z = r * Math.cos(phi) + (-1000 + Math.random() * 2000)
      positions.push(x)
      positions.push(y)
      positions.push(z)
    }
    return new Float32Array(positions)
  }, [count])
  // const { nodes } = useLoader(GLTFLoader, "./../../assets/scene.gltf")
  // console.log(nodes)
  return (
    <points>
      <bufferGeometry>
        <bufferAttribute attachObject={['attributes', 'position']} count={positions.length / 3} array={positions} itemSize={3} />
      </bufferGeometry>
      <pointsMaterial size={15} sizeAttenuation color="white" fog={false} />
    </points>
    // <Mesh>
    //   <skinnedMesh
    //     geometry={nodes.M_MED_Cosmosmo001_M_MED_Cosmos_Body_0.geometry}
    //     material={nodes.M_MED_Cosmosmo001_M_MED_Cosmos_Body_0.material}
    //     skeleton={nodes.M_MED_Cosmosmo001_M_MED_Cosmos_Body_0.skeleton}
    //   />
    //   <skinnedMesh
    //     geometry={nodes.M_MED_Cosmosmo_M_MED_Cosmos_Armor_0.geometry}
    //     material={materials.M_MED_Cosmos_Armor}
    //     skeleton={nodes.M_MED_Cosmosmo_M_MED_Cosmos_Armor_0.skeleton}
    //   />
    //   <skinnedMesh
    //     geometry={nodes.M_MED_Cosmosmo_M_MED_Cosmos_Body_0.geometry}
    //     material={nodes.M_MED_Cosmosmo_M_MED_Cosmos_Body_0.material}
    //     skeleton={nodes.M_MED_Cosmosmo_M_MED_Cosmos_Body_0.skeleton}
    //   />
    //   <skinnedMesh
    //     geometry={nodes.M_MED_Cosmosmo_M_MED_Cosmos_Head_0.geometry}
    //     material={materials.M_MED_Cosmos_Head}
    //     skeleton={nodes.M_MED_Cosmosmo_M_MED_Cosmos_Head_0.skeleton}
    //   />
    //   <skinnedMesh
    //     geometry={nodes.M_MED_Cosmosmo_M_MED_Cosmos_Cape_0.geometry}
    //     material={materials.M_MED_Cosmos_Cape}
    //     skeleton={nodes.M_MED_Cosmosmo_M_MED_Cosmos_Cape_0.skeleton}
    //   />
    //   <skinnedMesh
    //     geometry={nodes.SK_Pickaxe_Cosmos_Weaponmo_MI_Rifle_Cosmo_0.geometry}
    //     material={materials.MI_Rifle_Cosmo}
    //     skeleton={nodes.SK_Pickaxe_Cosmos_Weaponmo_MI_Rifle_Cosmo_0.skeleton}
    //   />
    // </Mesh>
  );
}

